#!/bin/bash


# Pull in any script dependencies here
source colors.sh

# Declare any constants here
grader=../bin/grader
tempDir="testBuild"


# fucntion declarations will go here
function usage() {
  printf "This is meant to be the usage function\n"
}

function generateExpOut() {
  local inDir=$1
  # test for temp dir existence
  if [[ ! -d $tempDir ]]; then
    # if it does not exist create it
    printf "\n${Red}Directory does not exist ${Reset} ${BWhite}==> ${Reset} ${BCyan} $tempDir ${Reset} ${BGreen} creating it for you..${Reset}\n\n"
    mkdir $tempDir
  fi
  
  # loop through all the files in the directory passed
  for file in $inDir/*.txt; do
    if [[ -f $file && -r $file ]]; then
      # scalpel just the file name away from the path
      fileName=$(basename $file)
      $grader $file >& $tempDir/$fileName
      # hold graders return value
      graderRet=$?
      # test return value of grader
      if [[ $graderRet ]]; then
        printf "\n$BBlue+ -- -- [ Test out file$Rest $BWhite=>$Reset $Yellow $fileName $Reset $BPurple succesfully generated $Reset\n\n"
      else
        printf "\n$Red+ -- -- [ Test out file$Reset $BWhite=>$Reset $Yellow $fileName $Reset failed\n\n"
      fi
    fi
  done
}

function testFiles() {
  # this function tests expected out
  # generated by generateExpOut
  printf "Function yet to be implemented\n"
}

# script hook point, grab args and pass to
# apporpriate function
if [[ $# -eq 1 ]]; then
  generateExpOut $1
elif [[ $# -eq 2 ]]; then
  testFiles $1 $2
else
  usage
fi
